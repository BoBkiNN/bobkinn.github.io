import fs from 'fs'
import path from 'path'
import { Plugin } from 'vite'

export function avatarsPlugin(): Plugin {
  let avatarsDir: string
  let generatedDir: string
  let outPath: string

  const generateFile = () => {
    if (!fs.existsSync(avatarsDir)) {
      console.warn(`⚠️  Avatars folder does not exist: ${avatarsDir}`)
      return
    }

    const files = fs
      .readdirSync(avatarsDir)
      .filter((f) => /\.(png|jpe?g|svg|webp)$/i.test(f))

    const tsContent =
      `// This file is auto-generated by vite-plugin-avatars\n` +
      `export const avatarList = [\n` +
      files.map((f) => `  '/assets/avatars/${f}'`).join(',\n') +
      `\n] as const\n`

    if (!fs.existsSync(generatedDir)) fs.mkdirSync(generatedDir, { recursive: true })
    fs.writeFileSync(outPath, tsContent, 'utf-8')

    console.info(`✅ Generated avatars.ts with ${files.length} avatars.`)
  }

  return {
    name: 'vite-plugin-avatars',
    enforce: 'pre',
    buildStart() {
      avatarsDir = path.resolve(process.cwd(), 'public/assets/avatars')
      generatedDir = path.resolve(process.cwd(), 'src/generated')
      outPath = path.join(generatedDir, 'avatars.ts')

      generateFile()
    },
    configureServer(server) {
      // Watch the avatars folder for changes
      avatarsDir = path.resolve(process.cwd(), 'public/assets/avatars')
      generatedDir = path.resolve(process.cwd(), 'src/generated')
      outPath = path.join(generatedDir, 'avatars.ts')

      server.watcher.add(avatarsDir)
      server.watcher.on('all', (event, filePath) => {
        if (!filePath.startsWith(avatarsDir)) return
        if (!/\.(png|jpe?g|svg|webp)$/i.test(filePath)) return
        generateFile()
        // Trigger Vite to reload modules using the generated file
        server.moduleGraph.invalidateModule(
          server.moduleGraph.getModuleById('/@fs/' + outPath)!
        )
      })
    },
  }
}
